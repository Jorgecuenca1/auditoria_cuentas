# Generated by Django 5.0.6 on 2024-07-28 15:58

from django.db import migrations

CODIGOS = [
    {
        "codigo": "DE16",
        "descripcion": "Persona corresponde a otro responsable de pago",
        "subcodigos": [
            {
                "subcodigo": "DE1601",
                "descripcion": "La factura corresponde a una persona que pertenecía a otro responsable de pago en el momento de la atención"
            }
        ]
    },
    {
        "codigo": "DE44",
        "descripcion": "El prestador de servicios de salud que factura no hace parte de la red integral e integrada de la entidad responsable de pago",
        "subcodigos": [
            {
                "subcodigo": "DE4401",
                "descripcion": "El profesional que ordenó el servicio o tecnología de salud facturado lo hizo desde una IPS que no hace parte de la red integral e integrada de la entidad responsable de pago"
            },
            {
                "subcodigo": "DE4402",
                "descripcion": "El profesional independiente que ordenó el servicio o tecnología de salud no hace parte de la red integral e integrada de la entidad responsable de pago"
            }
        ]
    },
    {
        "codigo": "DE50",
        "descripcion": "Factura ya pagada o en trámite",
        "subcodigos": [
            {
                "subcodigo": "DE5001",
                "descripcion": "La totalidad de la factura fue pagada por la entidad responsable de pago"
            },
            {
                "subcodigo": "DE5002",
                "descripcion": "La factura ya fue radicada a la entidad responsable de pago y se encuentra en trámite"
            }
        ]
    },
    {
        "codigo": "DE56",
        "descripcion": "No radicación de los soportes dentro de los veintidós (22) días hábiles siguientes a la fecha de expedición de la factura",
        "subcodigos": [
            {
                "subcodigo": "DE5601",
                "descripcion": "El prestador de servicios de salud o proveedor de tecnologías en salud no radica los soportes dentro de los veintidós (22) días hábiles siguientes a la fecha de expedición de la factura"
            }
        ]
    }
]

def populate_codes(apps, schema_editor):
    CodigoDevolucion = apps.get_model('facturacion', 'CodigoDevolucion')
    SubcodigoDevolucion = apps.get_model('facturacion', 'SubcodigoDevolucion')

    for entry in CODIGOS:
        codigo_padre, created = CodigoDevolucion.objects.get_or_create(
            codigo=entry['codigo'],
            defaults={'descripcion': entry['descripcion']}
        )
        for sub_entry in entry.get('subcodigos', []):
            SubcodigoDevolucion.objects.get_or_create(
                codigo_padre=codigo_padre,
                subcodigo=sub_entry['subcodigo'],
                defaults={'descripcion': sub_entry['descripcion']}
            )


def delete_codes(apps, schema_editor):
    CodigoDevolucion = apps.get_model('facturacion', 'CodigoDevolucion')
    SubcodigoDevolucion = apps.get_model('facturacion', 'SubcodigoDevolucion')
    codigos_to_delete = [c['codigo'] for c in CODIGOS]
    subcodigos_to_delete = [s['subcodigo'] for c in CODIGOS for s in c.get('subcodigos', [])]
    
    SubcodigoDevolucion.objects.filter(subcodigo__in=subcodigos_to_delete).delete()
    CodigoDevolucion.objects.filter(codigo__in=codigos_to_delete).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('facturacion', '0009_codigodevolucion_usuariosnoaptos_and_more'),
    ]

    operations = [
        migrations.RunPython(populate_codes, delete_codes),
    ]
